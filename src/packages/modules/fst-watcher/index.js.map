{"version":3,"file":"index.js","sources":["../src/fst-watcher/fst-watcher.selectors.ts","../src/fst-watcher/fst-watcher.types.ts","../src/fst-watcher/fst-watcher.actions.ts","../src/fst-watcher/fst-watcher.utils.ts","../src/fst-watcher/fst-watcher.operations/filter-data-source-change.ts","../src/fst-watcher/fst-watcher.operations/index.ts","../src/fst-watcher/fst-watcher.models.ts","../src/fst-watcher/fst-watcher.reducers.ts","../src/fst-watcher/index.ts"],"sourcesContent":["import anymatch             from \"anymatch\";\n\nimport { FileSelector,\n         FstRoot,\n         FstDirectory,\n         FstParent,\n         FstItemMap,\n         FstType,\n         FstItem, \n         AddressTypes}          from \"./fst-watcher.models\";\n\n\nfunction hasFstItem(fstRoot: FstRoot, path: string): boolean {\n    const rootDir = fstRoot.children.physical;\n    if (path === \"\") {\n        return true;\n    }\n\n    const spath = path.split(\"/\");\n    return _hasFstItem();\n\n    ///\n\n    function _hasFstItem(currDir = rootDir, index = 0): boolean {\n        const currName = spath[index];\n        if (spath.length - 1 === index) {\n            return !!currDir.children[currName];\n        }\n\n        const nextDir = currDir.children[currName];\n        if (nextDir && nextDir.type === \"directory\") {\n            return _hasFstItem(nextDir, index + 1);\n        }\n\n        return false;\n    }\n};\n\nfunction getFstItem<T extends FstItem>(\n    fstRoot: FstRoot, path: string, address?: AddressTypes\n): T {\n    // Defaults\n    if (!address) { address = \"physical\"; }\n\n    // Get root directory\n    const rootDir = fstRoot.children[address];\n\n    // Return root if no path provided\n    if (path === \"\") { return rootDir as T; }\n\n    // Call recursive get\n    const spath = path.split(\"/\");\n    return _getPath();\n\n    ///\n\n    function _getPath(currDir = rootDir, index = 0): T {\n        const currName = spath[index];\n        if (spath.length - 1 === index) {\n            return currDir.children[currName] as T;\n        }\n\n        const nextDir = currDir.children[currName] as FstDirectory;\n        if (!nextDir || nextDir.type !== \"directory\") {\n            throw Error(\"Directory not found.\");\n        }\n\n        return _getPath(nextDir, index + 1);\n    }\n}\n\nfunction getFstParent(fstRoot: FstRoot, item: FstItem): FstParent & FstItem {\n    if(item.parentPath !== undefined) {\n        // If it is virtual and it is the root element, return the physical path\n        // to the disk image file\n        if(item.address === 'virtual' && item.parentPath.split('/').length === 1) {\n            return getFstItem(fstRoot, item.imgPath);\n        }\n        return getFstItem(fstRoot, item.parentPath, item.address);\n    } else if(item.address === 'virtual') {\n        return getFstItem(fstRoot, item.imgPath);\n    } else {\n        return undefined;\n    }\n}\n\nfunction getFstChildren(fstRoot: FstRoot, fstItem: FstItem): FstItemMap  {\n    switch (fstItem.type) {\n        case \"directory\": return fstItem.children;\n        case \"dataSource\":\n        const mountPoint = getMountPoint(fstItem);\n        const mountFolder =\n            fstRoot.children.virtual.children[mountPoint] as FstDirectory;\n        if (mountFolder) {\n            return mountFolder.children;\n        } else {\n            return null;\n        }\n\n        default:\n            return null;\n    }\n};\n\nfunction getMountPoint(fstDataSource: FstItem): string {    \n    // Old version using node crypto\n    const crypto = require(\"crypto\");\n    return crypto.createHash(\"md5\").update(fstDataSource.path).digest(\"hex\");\n\n    // Using webcrypto\n    // const encoder = new TextEncoder();\n    // const data = encoder.encode(fstDataSource.path);\n\n    // return self.crypto.subtle.digest(\"SHA-1\", data).then((value) => {\n    //     return  hexString(value);\n    // });\n\n    // function hexString(buffer) {\n    //     const byteArray = new Uint8Array(buffer);\n      \n    //     const hexCodes = [...byteArray].map(value => {\n    //       const hexCode = value.toString(16);\n    //       const paddedHexCode = hexCode.padStart(2, '0');\n    //       return paddedHexCode;\n    //     });\n      \n    //     return hexCodes.join('');\n    // }\n}\n\nfunction getFullPath<T extends {imgPath?: string, path: string}>(\n    fstItem: T\n): string {\n    const { imgPath, path } = fstItem;\n    if(imgPath) {\n        return `${imgPath}/${path.split(\"/\").slice(1).join(\"/\")}`;\n    }\n    return `${path.split(\"/\").slice(1).join(\"/\")}`;\n    \n}\n\nfunction getFstType(path: string) {\n    if (anymatch(\"**/*.dd\", path)) {\n        return \"dataSource\";\n    }\n\n    return \"file\";\n}\n\nfunction isFstSelected(item: FstItem, selector: FileSelector) {\n    return selector &&\n        item.path === selector.path &&\n        item.address === selector.address;\n}\n\nfunction getSortedChildren(children: FstItemMap): Array<string> {\n    if (!children) {\n        return [];\n    }\n\n    const sortedKeys = Object\n        .keys(children)\n        .sort((nameA, nameB) => {\n            const fstA = children[nameA],\n                fstB = children[nameB];\n\n            if (fstB.type === \"directory\" && fstA.type !==  \"directory\") {\n                return 1;\n            }\n            if (fstA.type === \"directory\" && fstB.type !==  \"directory\") {\n                return -1;\n            }\n\n            return nameA.toLowerCase() > nameB.toLowerCase() ? 1 : -1;\n        });\n\n    // if (this.props.root) {\n    //     sortedKeys = sortedKeys.filter((key) => key !== \".mount\");\n    // }\n\n    return sortedKeys;\n}\n\n\nexport default {\n    hasFstItem,\n    getFstItem,\n    getMountPoint,\n    getFstParent,\n    getFstChildren,\n    getFullPath,\n    getFstType,\n    isFstSelected,\n    getSortedChildren\n}\n","const ADD            = \"imgspy/fst-watcher/ADD\";\nconst UPDATE         = \"imgspy/fst-watcher/UPDATE\";\nconst UNLINK         = \"imgspy/fst-watcher/UNLINK\";\nconst OPEN           = \"imgspy/fst-watcher/OPEN\";\nconst OPEN_OUT       = \"imgspy/fst-watcher/OPEN_OUT\";\nconst TOGGLE_OPEN    = \"imgspy/fst-watcher/TOGGLE_OPEN\";\nconst ANALYZE        = \"imgspy/fst-watcher/HASH\";\nconst LIST           = \"imgspy/fst-watcher/LIST\";\nconst CONTENT        = \"imgspy/fst-watcher/CONTENT\";\nconst EXPORT         = \"imgspy/fst-watcher/EXPORT\";\n\n\nexport default {\n    ADD,\n    UPDATE,\n    UNLINK,\n    OPEN,\n    OPEN_OUT,\n    TOGGLE_OPEN,\n    ANALYZE,\n    LIST,\n    CONTENT,\n    EXPORT\n}\n","import { Action }               from \"redux-actions\";\n\nimport { FstItem,\n         FstFile,\n         FstDirectory,\n         FstAddPayload,\n         FstUnlinkPayload,\n         FileSelector,\n         FstExportPayload, \n         AddressTypes }         from \"./fst-watcher.models\";\nimport types                    from \"./fst-watcher.types\";\n\n\nconst add = (\n    newItem: Partial<FstItem>, address?: AddressTypes\n): Action<FstAddPayload> => ({\n    type: types.ADD,\n    payload: { newItem, address }\n});\n\nconst unlink = (\n    path: string, address?: AddressTypes\n): Action<FstUnlinkPayload> => ({\n    type: types.UNLINK,\n    payload: { path, address }\n});\n\nconst open = (\n    path: string, address?: AddressTypes\n): Action<FstUnlinkPayload> => ({\n    type: types.OPEN,\n    payload: { path, address }\n});\n\nconst toggleOpen = (\n    selector: FileSelector\n): Action<FstUnlinkPayload> => ({\n    type: types.TOGGLE_OPEN,\n    payload: {\n        path: selector.path,\n        address: selector.address\n    }\n});\n\nconst openOut = (\n    payload: FstItem\n): Action<FstItem> => ({\n    type: types.OPEN_OUT,\n    payload\n});\n\nconst analyze = (\n    payload: FstItem\n): Action<FstItem> => ({\n    type: types.ANALYZE,\n    payload\n});\n\nconst list = (\n    payload: FstDirectory\n): Action<FstDirectory> => ({\n    type: types.LIST,\n    payload\n});\n\nconst content = (\n    payload: FstFile\n): Action<FstFile> => ({\n    type: types.CONTENT,\n    payload\n});\n\nconst exportFile = (\n    file: FileSelector, path: string\n): Action<FstExportPayload> => ({\n    type: types.EXPORT, payload: { file, path }\n});\n\n\nexport default {\n    add,\n    unlink,\n    open,\n    toggleOpen,\n    openOut,\n    analyze,\n    list,\n    content,\n    exportFile\n};\n","import { DataSource }           from \"img-spy-core\";\n\nimport { FstItem,\n         FstDirectory,\n         FstDataSource }        from \"./fst-watcher.models\";\n\n\ntype UpdatePathCallback = (name: string, prev: FstItem) => FstItem;\nfunction updatePath(rootDir: FstDirectory, path: string, buildCurrItem: UpdatePathCallback): FstDirectory {\n    const spath =  path.split(\"/\");\n    return _updatePath();\n\n    ///\n\n    function _updatePath(currDir = rootDir, index = 0) {\n        const currName = spath[index];\n        if (spath.length - 1 === index) {\n            return {\n                ...currDir,\n                children: {\n                    ...currDir.children,\n                    [currName]: {\n                        ...buildCurrItem(currName, currDir.children[currName]),\n                        parentPath: currDir.path\n                    }\n                }\n            };\n        }\n\n        const nextDir = currDir.children[currName] as FstDirectory;\n        if (!nextDir) {\n            throw Error(\"Directory not found.\");\n        }\n\n        return {\n            ...currDir,\n            children: {\n                ...currDir.children,\n                [currName]: _updatePath(nextDir, index + 1)\n            }\n        };\n    }\n}\n\nfunction deletePath(rootDir: FstDirectory, path: string): FstDirectory {\n    const spath = path.split(\"/\");\n    return _deletePath();\n\n    ///\n\n    function _deletePath(currDir = rootDir, index = 0): FstDirectory {\n        const currName = spath[index];\n        if (spath.length - 1 === index) {\n            const { [currName]: rmChild, ...children  } = currDir.children;\n            return { ...currDir, children };\n        }\n\n        const nextDir = currDir.children[currName] as FstDirectory;\n        if (!nextDir) {\n            return currDir;\n        }\n\n        return {\n            ...currDir,\n            children: {\n                ...currDir.children,\n                [currName]: _deletePath(nextDir, index + 1)\n            }\n        };\n    }\n}\n\nfunction openPath(rootDir: FstDirectory, path: string, openPath = false): FstDirectory {\n    const spath = path.split(\"/\");\n    return _openPath() as FstDirectory;\n\n    ///\n\n    function _openPath(currDir = rootDir, index = 0): FstDirectory {\n        const currName = spath[index];\n        if (spath.length - (openPath ? 0 : 1) === index) {\n            return {\n                ...currDir,\n                isOpen: true\n            };\n        }\n\n        const nextDir = currDir.children[currName] as FstDirectory;\n        if (!nextDir) {\n            throw Error(\"Directory not found.\");\n        }\n\n        return {\n            ...currDir,\n            isOpen: true,\n            children: {\n                ...currDir.children,\n                [currName]: _openPath(nextDir, index + 1)\n            }\n        };\n    }\n}\n\nfunction insertDataSource(rootDir: FstDirectory, dataSource: DataSource): void {\n    const spath = dataSource.path.split(\"/\");\n    let accPath = \"\";\n    _insertDataSource();\n\n    ////\n\n    function _insertDataSource(currDir = rootDir, index = 0) {\n        const currName = spath[index];\n        accPath += (index > 0 ? \"/\" : \"\") + currName;\n        if (spath.length - 1 === index) {\n            const fstDataSource: FstDataSource = {\n                ...dataSource,\n\n                address: \"physical\",\n                parentPath: currDir.path,\n                type: \"dataSource\"\n            };\n            delete fstDataSource.computingHash;\n            currDir.children[currName] = fstDataSource;\n            return;\n        }\n\n        let nextDir = currDir.children[currName] as FstDirectory;\n        if (!nextDir) {\n            nextDir = {\n                name: currName,\n                path: accPath,\n                address: \"physical\",\n                parentPath: currDir.path,\n\n                type: \"directory\",\n                isOpen: false,\n                children: {}\n            };\n            currDir.children[currName] = nextDir;\n        }\n        _insertDataSource(nextDir, index + 1);\n    }\n}\n\n\nexport default {\n    updatePath,\n    deletePath,\n    openPath,\n    insertDataSource\n};\n","import { pipe,\n         OperatorFunction }         from \"rxjs\";\nimport { filter,\n         map }                      from \"rxjs/operators\";\nimport { StateObservable,\n         ofType }                   from \"redux-observable\";\nimport { Action }                   from \"redux-actions\";\n\nimport { FstDataSource,\n         FstAddPayload,\n         FstState }                 from \"../fst-watcher.models\";\nimport types                        from \"../fst-watcher.types\";\nimport selectors                    from \"../fst-watcher.selectors\";\n\n\nfunction filterDataSourceChange<S extends FstState>(\n    state$: StateObservable<S>\n): OperatorFunction<Action<FstAddPayload>, FstDataSource> {\n    return pipe(\n        ofType(types.ADD),\n        filter((action: Action<any>) => {\n            return action.payload.newItem.type === \"dataSource\";\n        }),\n        map(action => {\n            const state = state$.value;\n            return selectors.getFstItem<FstDataSource>(\n                state.fstRoot,\n                action.payload.newItem.path\n            );\n        })\n    );\n}\n\nexport default filterDataSourceChange;\n","import filterDataSourceChange   from \"./filter-data-source-change\";\n\nexport default {\n    filterDataSourceChange\n};\n","import { DataSourceType,\n         Partition }   from \"img-spy-core\";\n\n\nexport const dataSourceTypes = {\n    DISK: 1,\n    PARTITION: 2\n};\n\nexport const dataSourceFileActions = {\n    MOVE: 1\n};\n\nexport interface FileSelector {\n    path: string;\n    address: AddressTypes;\n}\n\nexport type AddressTypes = \"virtual\" | \"physical\";\n\nexport interface FstInfo {\n    parentPath?: string;\n    deleted?: boolean;\n    loaded?: boolean;\n    name?: string;\n    content?: Buffer;\n    imgPath?: string;\n    offset?: number;\n    inode?: number;\n\n    path: string;\n    address: AddressTypes;\n}\n\nexport interface FstFile extends FstInfo {\n    type: \"file\";\n}\n\nexport interface FstItemMap {\n    [name: string]: FstItem\n}\n\nexport interface FstParent extends FstInfo {\n    isOpen?: boolean;\n    canOpen?: boolean;\n    children?: FstItemMap;\n}\n\nexport interface FstDataSource extends FstParent {\n    type: \"dataSource\";\n\n    imgType?: DataSourceType;\n    partitions?: Array<Partition>;\n    hash?: string;\n    computedHash: string;\n    computingHash?: boolean;\n    mountedIn?: string;\n}\n\nexport interface FstDirectory extends FstParent  {\n    type: \"directory\";\n}\n\nexport interface FstRoot {\n    type: \"root\";\n    name: \"root\";\n    children: {\n        physical: FstDirectory;\n        virtual: FstDirectory;\n    };\n}\n\nexport type FstItem = FstDirectory | FstFile | FstDataSource;\nexport type FstType = FstItem[\"type\"];\n\nexport interface FstAddPayload {\n    newItem: Partial<FstItem>;\n    address: AddressTypes;\n}\n\nexport interface FstUnlinkPayload {\n    path: string;\n    address: AddressTypes;\n}\n\nexport interface FstHashPayload {\n    path: string;\n    hash: string;\n}\n\nexport interface FstExportPayload {\n    file: FileSelector;\n    path: string;\n}\n\nexport interface FstState {\n    fstRoot: FstRoot;\n}\n","import * as path                from \"path\";\nimport { Reducer }              from \"redux-actions\";\nimport { reducerBuilder }       from \"img-spy-core\";\n\nimport { FstDirectory,\n         FstItem,\n         FstRoot,\n         FstDataSource,\n         FstAddPayload,\n         FstUnlinkPayload }     from \"./fst-watcher.models\";\nimport utils                    from \"./fst-watcher.utils\";\nimport types                    from \"./fst-watcher.types\";\nimport selectors                from \"./fst-watcher.selectors\";\n\n\nconst add: Reducer<FstRoot, FstAddPayload> = (\n    state, action\n) => {\n    const { newItem } = action.payload;\n    const address = action.payload.address || \"physical\";\n    const rootDir = state.children[address];\n\n    if (newItem.path === \"\") {\n        if (newItem.type === \"directory\") {\n            return {\n                ...state,\n                children: {\n                    ...state.children,\n                    [address]: {\n                        ...rootDir,\n                        ...newItem\n                    }\n\n                }\n            };\n        } else {\n            throw Error(\"Wrong path for a file.\");\n        }\n    }\n\n    const newRootDir = utils.updatePath(rootDir, newItem.path, (name, prev) => {\n        const nextItem: FstItem = Object.assign({}, prev, newItem);\n        if ((nextItem.type === \"directory\") && !nextItem.children) {\n            nextItem.children = {};\n        }\n\n        return nextItem;\n    });\n\n    return {\n        ...state,\n        children: {\n            ...state.children,\n            [address]: newRootDir\n        }\n    };\n}\n\nconst unlink: Reducer<FstRoot, FstUnlinkPayload> = (\n    state, action\n) => {\n    const { path } = action.payload;\n    let { address } = action.payload;\n    if (!address) {\n        address = \"physical\";\n    }\n    const rootDir = state.children[address];\n\n    const newRootDir = utils.deletePath(rootDir, path);\n\n    return {\n        ...state,\n        children: {\n            ...state.children,\n            [address]: newRootDir\n        }\n    };\n};\n\nconst open: Reducer<FstRoot, FstUnlinkPayload> = (\n    state, action\n) => {\n    const { path } = action.payload;\n    let { address } = action.payload;\n    if (!address) {\n        address = \"physical\";\n    }\n    const rootDir = state.children[address];\n\n    if (path === \"\") {\n        return state;\n    }\n\n    const children =  {\n        ...state.children,\n        [address]: utils.openPath(rootDir, path)\n    };\n\n    if(address === 'virtual') {\n        const item = selectors.getFstItem(state, path, address);\n        children['physical'] = utils.openPath(state.children['physical'],\n            item.imgPath, true);\n    }\n\n    return {\n        ...state,\n        children: {\n            ...children,\n        }\n    };\n}\n\nconst toggleOpen: Reducer<FstRoot, FstUnlinkPayload> = (\n    state, action\n): FstRoot => {\n    const { path } = action.payload;\n    let { address } = action.payload;\n    if (!address) {\n        address = \"physical\";\n    }\n    const rootDir = state.children[address];\n    let newRootDir;\n    if (!path) {\n        newRootDir = {\n            ...rootDir,\n            isOpen: !rootDir.isOpen\n        };\n    } else {\n        newRootDir = utils.updatePath(rootDir, path,\n            (name, prev: FstDirectory | FstDataSource) =>\n                ({\n                    ...prev,\n                    isOpen: !prev.isOpen\n                })\n        );\n    }\n\n    return {\n        ...state,\n        children: {\n            ...state.children,\n            [address]: newRootDir\n        }\n    };\n}\n\n\ntype Payload = FstAddPayload | FstUnlinkPayload;\nexport default reducerBuilder<FstRoot, Payload>({\n        [types.ADD]: add,\n        [types.UNLINK]: unlink,\n        [types.OPEN]: open,\n        [types.TOGGLE_OPEN]: toggleOpen\n    }, (info) => {\n        const initialPhysical: FstDirectory = {\n            name: path.basename(info.args[\"folder\"]),\n            type: \"directory\",\n            path: \"\",\n            address: \"physical\",\n            isOpen: true,\n            children: {}\n        };\n\n        const initialState: FstRoot = {\n            name: \"root\",\n            type: \"root\",\n            children: {\n                physical: initialPhysical,\n                virtual: {\n                    name: \"Virtual\",\n                    type: \"directory\",\n                    address: \"virtual\",\n                    isOpen: false,\n                    path: \"\",\n                    children: {}\n                }\n            }\n        };\n        Object.keys(info.initialSettings.sources).forEach((path) => {\n            const dataSource = info.initialSettings.sources[path];\n            utils.insertDataSource(initialPhysical, dataSource);\n        });\n\n        return initialState;\n    });","// TODO: Make this module easier to understand\nexport const name = \"fstRoot\";\nexport { default as fstWatcherSelectors }   from \"./fst-watcher.selectors\";\nexport { default as fstWatcherActions }     from \"./fst-watcher.actions\";\nexport { default as fstWatcherTypes }       from \"./fst-watcher.types\";\nexport { default as fstWatcherUtils }       from \"./fst-watcher.utils\";\nexport { default as fstWatcherOperations }  from \"./fst-watcher.operations\";\n\nexport *                                    from \"./fst-watcher.models\";\nexport { default }                          from \"./fst-watcher.reducers\";\n"],"names":["add","unlink","open","toggleOpen","path.basename"],"mappings":"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"}